% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sdf_calculations.R
\name{compute_sdf_innovations}
\alias{compute_sdf_innovations}
\title{Compute SDF Innovations Time Series}
\usage{
compute_sdf_innovations(
  yields,
  term_premia,
  i,
  return_df = FALSE,
  dates = NULL
)
}
\arguments{
\item{yields}{Data frame with columns y1, y2, ..., containing yields}

\item{term_premia}{Data frame with columns tp1, tp2, ..., containing term premia}

\item{i}{Integer, the horizon (must be >= 1)}

\item{return_df}{Logical, if TRUE returns a data frame with dates (default FALSE)}

\item{dates}{Optional vector of dates corresponding to the rows in yields/term_premia.
If not provided and return_df = TRUE, will use row indices.}
}
\value{
Numeric vector of SDF innovations, or data frame with dates if return_df = TRUE
}
\description{
Computes the time series of SDF innovations given by:
exp(n_hat(i,t)) * (Delta_(t+1)p_(t+i)^(1) + 0.5*(Delta_(t+1)p_(t+i)^(1))^2 -
0.5*E\[(Delta_(t+1)p_(t+i)^(1))^2\])
}
\details{
The SDF innovation is computed as:
exp(n_hat(i,t)) * (Delta_(t+1)p_(t+i)^(1) + 0.5*(Delta_(t+1)p_(t+i)^(1))^2 -
0.5*E\[(Delta_(t+1)p_(t+i)^(1))^2\])

Where:
\itemize{
\item Delta_(t+1)p_(t+i)^(1) = n_hat(i-1,t+1) - n_hat(i,t)
\item E\[(Delta_(t+1)p_(t+i)^(1))^2\] = (1/(T-1)) * sum(n_hat(i-1,t+1) - n_hat(i,t))^2
for t=1 to T-1
}
}
\examples{
\dontrun{
# Extract ACM data
data <- extract_acm_data(data_types = c("yields", "term_premia"))

# Compute SDF innovations for i=5
sdf_innovations_5 <- compute_sdf_innovations(
  yields = data[, grep("^y", names(data))],
  term_premia = data[, grep("^tp", names(data))],
  i = 5
)

# Compute SDF innovations with dates
sdf_innovations_5_df <- compute_sdf_innovations(
  yields = data[, grep("^y", names(data))],
  term_premia = data[, grep("^tp", names(data))],
  i = 5,
  return_df = TRUE,
  dates = data$date
)
}

}
