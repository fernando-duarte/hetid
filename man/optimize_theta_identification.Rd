% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_theta_identification.R
\name{optimize_theta_identification}
\alias{optimize_theta_identification}
\title{Optimize Theta (Heteroskedasticity Parameter) Identification}
\usage{
optimize_theta_identification(
  maturity,
  n_pcs = 4,
  pc_data,
  yields,
  term_premia,
  maturities,
  tau_bounds = c(0, 0.99),
  weight_bounds = 2,
  n_starts = 20,
  algorithm = "NLOPT_LN_COBYLA",
  verbose = FALSE
)
}
\arguments{
\item{maturity}{Bond maturity in years (must be >= 2)}

\item{n_pcs}{Number of principal components to use (J = 1 to 6, default 4)}

\item{pc_data}{Matrix of principal components (T x K) where K >= n_pcs}

\item{yields}{Matrix of yields (T x M) where M is number of maturities}

\item{term_premia}{Matrix of term premia (T x M)}

\item{maturities}{Vector of all available maturities}

\item{tau_bounds}{Vector of length 2 with bounds for tau (default c(0, 0.99))}

\item{weight_bounds}{Scalar bound for weights (default 2, so -2 <= w <= 2)}

\item{n_starts}{Number of random starting points for multi-start optimization (default 20)}

\item{algorithm}{Optimization algorithm (default "COBYLA")}

\item{verbose}{Logical, whether to print progress (default FALSE)}
}
\value{
List containing:
\item{maturity}{The maturity used}
\item{n_pcs}{Number of PCs used (J)}
\item{tau_opt}{Optimal tau value}
\item{weights_opt}{Optimal PC weights (normalized)}
\item{theta_lower}{Lower bound of identified set for theta}
\item{theta_upper}{Upper bound of identified set for theta}
\item{interval_width}{Width of the identified interval}
\item{objective}{Optimal objective function value}
\item{convergence}{Convergence status from optimizer}
\item{time_elapsed}{Computation time in seconds}
\item{A}{Quadratic coefficient A}
\item{B}{Quadratic coefficient B}
\item{C}{Quadratic coefficient C}
\item{discriminant}{B^2 - 4AC}
}
\description{
Solves the optimization problem P(i,J) to identify the heteroskedasticity
parameter theta_i for a given maturity using J principal components.
This function finds the optimal tau and PC weights that minimize
the distance between the two roots of the quadratic equation.
}
